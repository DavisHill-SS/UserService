package com.beardtrust.webapp.service;

import java.util.List;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.beardtrust.webapp.userservice.repos.UserRepository;
import com.beardtrust.webapp.userservice.entities.UserEntity;

@Service
public class UserServiceImpl implements UserService {
	
	private UserRepository userRepo;
	
	@Autowired
	public UserServiceImpl(UserRepository userRepo) {
		this.userRepo = userRepo;
	}

	@Override
	@Transactional
	public List<User> getAll() {
		
		List<User> list = userRepo.findAll();
		
		return list;
	}

	@Override
	@Transactional
	public User getById(int id) {
		Optional<User> result = userRepo.findById(id);
		
		UserEntity user = null;
		
		if(result.isPresent()) {
			user = result.get();
		}
		else {
			throw new RuntimeException("User id - " + id + " not found");
		}
		
		return user;
	}

	@Override
	@Transactional
	public void deleteById(int id) {
		
		Optional<User> result = userRepo.findById(id);
		
		if(result.isPresent()) {
			userRepo.deleteById(id);
		}
		else {
			throw new RuntimeException("User id - " + id + " not found");
		}
		
		
	}

	@Override
	@Transactional
	public void save(UserEntity user) {
		userRepo.save(user);
		}

}
