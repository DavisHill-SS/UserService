package com.beardtrust.webapp.controller;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.security.access.prepost.PreAuthorize;

import com.beardtrust.webapp.entity.User;
import com.beardtrust.webapp.service.UserService;

/**
 *
 * @author Davis Hill
 */

@RestController
@CrossOrigin
@RequestMapping("/users")
public class UserController {
	
	private UserService userService;
	
	@Autowired
	public UserController(UserService userService) {
		this.userService = userService;
	}
	
	@PostMapping()
  @PreAuthorize("hasAuthority('admin')")
	public void createUser(@RequestBody UserEntity user) {
		userService.save(user);
	}
	
	@GetMapping()
  @PreAuthorize("hasAuthority('admin')")
	public List<User> displayAll(){
		return userService.getAll();
	}
	
	@GetMapping("/{id}")
  @PreAuthorize("hasAuthority('admin') or principal == #id")
	public User displayById(@PathVariable int id) {
		return userService.getById(id);
	}
	
	@PutMapping()
  @PreAuthorize("hasAuthority('admin')")
	public void updateUser(@RequestBody UserEntity user) {
		userService.save(user);
	}
	
	@DeleteMapping("/{id}")
  @PreAuthorize("hasAuthority('admin') or principal == #id")
	public void deleteUser(@PathVariable int id){
		userService.deleteById(id);
	}
	

	



}
